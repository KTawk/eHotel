/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.39
 * Generated at: 2025-05-07 17:35:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class employee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(11);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Employee Operations - e-Hotels</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("        h2, h3 {\n");
      out.write("            color: #333;\n");
      out.write("        }\n");
      out.write("        .button-bar {\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        .button-bar button {\n");
      out.write("            background-color: #5cb85c;\n");
      out.write("            color: #fff;\n");
      out.write("            border: none;\n");
      out.write("            padding: 8px 15px;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin-right: 10px;\n");
      out.write("        }\n");
      out.write("        .button-bar button:hover {\n");
      out.write("            background-color: #4cae4c;\n");
      out.write("        }\n");
      out.write("        .section {\n");
      out.write("            display: none; /* Hidden by default; toggled via JavaScript */\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            padding: 15px;\n");
      out.write("            background-color: #fff;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("        label {\n");
      out.write("            margin-right: 10px;\n");
      out.write("            display: inline-block;\n");
      out.write("            width: 150px;\n");
      out.write("        }\n");
      out.write("        input[type=\"text\"], input[type=\"date\"], select {\n");
      out.write("            padding: 5px;\n");
      out.write("            border-radius: 3px;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("        input[type=\"submit\"] {\n");
      out.write("            background-color: #5cb85c;\n");
      out.write("            color: #fff;\n");
      out.write("            cursor: pointer;\n");
      out.write("            border: none;\n");
      out.write("            padding: 6px 12px;\n");
      out.write("            border-radius: 3px;\n");
      out.write("        }\n");
      out.write("        input[type=\"submit\"]:hover {\n");
      out.write("            background-color: #4cae4c;\n");
      out.write("        }\n");
      out.write("        table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            background-color: #fff;\n");
      out.write("            margin-top: 10px;\n");
      out.write("        }\n");
      out.write("        th, td {\n");
      out.write("            padding: 10px;\n");
      out.write("            border-bottom: 1px solid #ddd;\n");
      out.write("        }\n");
      out.write("        th {\n");
      out.write("            background-color: #f2f2f2;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("        tr:hover {\n");
      out.write("            background-color: #f1f1f1;\n");
      out.write("        }\n");
      out.write("        .actions button {\n");
      out.write("            background-color: #5cb85c;\n");
      out.write("            color: #fff;\n");
      out.write("            border: none;\n");
      out.write("            padding: 6px 12px;\n");
      out.write("            border-radius: 3px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("        .actions button:hover {\n");
      out.write("            background-color: #4cae4c;\n");
      out.write("        }\n");
      out.write("        .form-container {\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            padding-bottom: 10px;\n");
      out.write("            border-bottom: 1px solid #ddd;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    <script>\n");
      out.write("        function showSection(sectionId) {\n");
      out.write("            // Hide both sections\n");
      out.write("            document.getElementById(\"allBookingsSection\").style.display = \"none\";\n");
      out.write("            document.getElementById(\"walkInSection\").style.display = \"none\";\n");
      out.write("            // Show the requested section\n");
      out.write("            document.getElementById(sectionId).style.display = \"block\";\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div style=\"margin-bottom: 10px;\">\n");
      out.write("    <a href=\"index.jsp\" style=\"color: #5cb85c; text-decoration: none;\">Go to Main Page</a>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<h2>Employee Operations</h2>\n");
      out.write("\n");
      out.write("<!-- Button bar with two buttons -->\n");
      out.write("<div class=\"button-bar\">\n");
      out.write("    <button onclick=\"showSection('allBookingsSection')\">Show All Bookings</button>\n");
      out.write("    <button onclick=\"showSection('walkInSection')\">Walk-In Customer</button>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- SECTION 1: TABLE OF ALL BOOKINGS -->\n");
      out.write("<div id=\"allBookingsSection\" class=\"section\">\n");
      out.write("    <h3>All Bookings for All Customers</h3>\n");
      out.write("    ");

        Connection db = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Class.forName("org.postgresql.Driver");
            db = DriverManager.getConnection("jdbc:postgresql://localhost:5432/e_hotel_system", "postgres", "password");
            st = db.createStatement();

            String sql =
                    "SELECT b.booking_id, b.creation_date, b.start_date, b.end_date, b.room_id, " +
                            "       c.sin, c.firstname, c.lastname " +
                            "FROM booking b " +
                            "JOIN customer c ON b.c_sin = c.sin " +
                            "ORDER BY b.booking_id";

            rs = st.executeQuery(sql);

                out.println("<table>");
                out.println("<tr>");
                out.println("<th>Booking ID</th>");
                out.println("<th>Customer SIN</th>");
                out.println("<th>Customer Name</th>");
                out.println("<th>Creation Date</th>");
                out.println("<th>Start Date</th>");
                out.println("<th>End Date</th>");
                out.println("<th>Room ID</th>");
                out.println("<th>Action</th>");
                out.println("</tr>");

                while (rs.next()) {
                    String bookingId = rs.getString("booking_id");
                    String sin = rs.getString("sin");
                    String fname = rs.getString("firstname");
                    String lname = rs.getString("lastname");
                    String creationDate = rs.getString("creation_date");
                    String startDate = rs.getString("start_date");
                    String endDate = rs.getString("end_date");
                    String roomId = rs.getString("room_id");

                    out.println("<tr>");
                    out.println("<td>" + bookingId + "</td>");
                    out.println("<td>" + sin + "</td>");
                    out.println("<td>" + fname + " " + lname + "</td>");
                    out.println("<td>" + creationDate + "</td>");
                    out.println("<td>" + startDate + "</td>");
                    out.println("<td>" + endDate + "</td>");
                    out.println("<td>" + roomId + "</td>");
                    out.println("<td class='actions'>");
                    out.println("<form method='post' action='convertBookingRenting.jsp' style='display:inline;'>");
                    out.println("<input type='hidden' name='bookingId' value='" + bookingId + "'/>");
                    out.println("<input type='hidden' name='customerSIN' value='" + sin + "'/>");
                    out.println("<input type='hidden' name='startDate' value='" + startDate + "'/>");
                    out.println("<input type='hidden' name='endDate' value='" + endDate + "'/>");
                    out.println("<input type='hidden' name='roomId' value='" + roomId + "'/>");
                    out.println("<button type='submit'>Convert to Renting</button>");
                    out.println("</form>");
                    out.println("</td>");
                    out.println("</tr>");
                }
                out.println("</table>");

        } catch (Exception e) {
            out.println("<p><strong>Error retrieving bookings:</strong> " + e.getMessage() + "</p>");
        } finally {
            if (rs != null) try { rs.close(); } catch (SQLException ignored) {}
            if (st != null) try { st.close(); } catch (SQLException ignored) {}
            if (db != null) try { db.close(); } catch (SQLException ignored) {}
        }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- SECTION 2: WALK-IN CUSTOMER (DIRECT RENTING) & RECORD PAYMENT -->\n");
      out.write("<div id=\"walkInSection\" class=\"section\">\n");
      out.write("    <h3>Walk-In Customer</h3>\n");
      out.write("    <!-- Direct Renting Form -->\n");
      out.write("    <div class=\"form-container\">\n");
      out.write("        <h4>Direct Renting (Register Renting)</h4>\n");
      out.write("        <form method=\"post\" action=\"directRenting.jsp\">\n");
      out.write("            <label for=\"customerId\">Customer SIN:</label>\n");
      out.write("            <input type=\"text\" name=\"customerId\" id=\"customerId\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <label for=\"roomId\">Room ID:</label>\n");
      out.write("            <input type=\"text\" name=\"roomId\" id=\"roomId\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <label for=\"startDate\">Start Date:</label>\n");
      out.write("            <input type=\"date\" name=\"startDate\" id=\"startDate\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <label for=\"endDate\">End Date:</label>\n");
      out.write("            <input type=\"date\" name=\"endDate\" id=\"endDate\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <input type=\"submit\" value=\"Register Direct Renting\">\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("    <!-- Record Payment Form -->\n");
      out.write("    <div class=\"form-container\">\n");
      out.write("        <h4>Record Customer Payment for Renting</h4>\n");
      out.write("        <form method=\"post\" action=\"payment.jsp\">\n");
      out.write("            <label for=\"rentingId\">Renting ID:</label>\n");
      out.write("            <input type=\"text\" name=\"rentingId\" id=\"rentingId\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <label for=\"paymentAmount\">Payment Amount:</label>\n");
      out.write("            <input type=\"text\" name=\"paymentAmount\" id=\"paymentAmount\" required>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            <input type=\"submit\" value=\"Record Payment\">\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Optionally, show one section by default on page load.\n");
      out.write("    showSection('allBookingsSection');\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
